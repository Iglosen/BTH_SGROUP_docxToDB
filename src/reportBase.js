/**
 * A module exporting functions to access the bank database.
 */
"use strict";

module.exports = {
    addToDatabase: addToDatabase,
    addGeo: addGeo

};

const mysql  = require("promise-mysql");
const config = require("../config/db/reportBase.json");
const fs = require('fs');
let db;


/**
 * Main function.
 * @async
 * @returns void
 */
(async function() {
    db = await mysql.createConnection(config);

    process.on("exit", () => {
        db.end();
    });
})();

function getUpdateDBTableString (tableName, tablerowHeaders) {

var string =
`DROP PROCEDURE IF EXISTS fixTable;

CREATE PROCEDURE fixTable()
BEGIN

IF EXISTS(SELECT table_name
                FROM INFORMATION_SCHEMA.TABLES
                WHERE table_name LIKE '` + tableName + `') THEN`

for (var i = 0; i < tablerowHeaders.length; i++) {
    var first = tablerowHeaders[i];
    var second;
    if (i == 0) {
        second = "ID";
    }
    else {
        second = tablerowHeaders[i-1];
    }

string +=
`   IF NOT EXISTS( SELECT NULL
            FROM INFORMATION_SCHEMA.COLUMNS
          WHERE table_name = '` + tableName + `'
             AND table_schema = 'reportbase'
             AND column_name = '` + first + `')

             THEN

			SET @sql = CONCAT('Alter table ` + tableName + ` Add Column ` + first + ` TEXT DEFAULT NULL AFTER ` + second + `');

			PREPARE stmt from @sql;
			EXECUTE stmt;
			DEALLOCATE PREPARE stmt;

	END IF;
`
}

var createTable = "";
for (var i = 0; i < tablerowHeaders.length; i++) {
    createTable += "," + tablerowHeaders[i] + " TEXT DEFAULT NULL";
}

string +=
`ELSE
	SET @sql = CONCAT('CREATE TABLE ` + tableName + `(ID VARCHAR(255) NOT NULL UNIQUE` + createTable + `)');
	PREPARE stmt from @sql;
	EXECUTE stmt;
	DEALLOCATE PREPARE stmt;


END IF;
END;

CALL fixTable();`;

return string;
}

async function addGeo() {
    var string =
    `
CREATE TABLE IF NOT EXISTS kommunerToDelivery (OBJECTID TEXT, KOM_NAMN TEXT, ID TEXT, Shape_Area TEXT, Shape_Length TEXT, KOMMUNID_txt TEXT);

INSERT INTO kommunerToDelivery (OBJECTID,KOM_NAMN,ID,Shape_Area,Shape_Length,KOMMUNID_txt) VALUES ('1','Upplands Väsby','114','84264944.17.00','58366.3220409382',''),
 ('2','Vallentuna','115','371073987.13.00','675076.29.00',''),
 ('3','Österåker','117','557644252.36.00','13182176.53.00',''),
 ('4','Värmdö','120','1641422888.16992','9585580.58.00',''),
 ('5','Järfälla','123','63380847.54.00','44211.3236267746',''),
 ('6','Ekerö','125','386552229.15.00','25070147.47.00',''),
 ('7','Huddinge','126','141393266.09.00','22497489.49.00',''),
 ('8','Botkyrka','127','223504194.17.00','88496.2610139534',''),
 ('9','Salem','128','71607272.14.00','55327.9155055244',''),
 ('10','Haninge','136','1237204175.58154','12902179.18.00',''),
 ('11','Tyresö','138','101020452.48.00','54012.2756450274',''),
 ('12','Upplands-Bro','139','328307320.07.00','86038.9652812272',''),
 ('13','Nykvarn','140','177915913.16.00','70931.3821900725',''),
 ('14','Täby','160','71673810.13.00','37627.6994270653',''),
 ('15','Danderyd','162','32690579.33.00','27654.9152977527',''),
 ('16','Sollentuna','163','58313706.36.00','43880.5108419881',''),
 ('17','Stockholm','180','215792765.54.00','4336935.43.00',''),
 ('18','Södertälje','181','697761344.18.00','11491007.28.00',''),
 ('19','Nacka','182','129488569.29.00','5285987.26.00',''),
 ('20','Sundbyberg','183','9162113.12.00','16640488.54.00',''),
 ('21','Solna','184','21777634.53.00','24036.9170606311',''),
 ('22','Lidingö','186','49271878.15.00','32008.8196101442',''),
 ('23','Vaxholm','187','110115670.39.00','54625.5121762789',''),
 ('24','Norrtälje','188','3578111466.98486','16573480.49.00',''),
 ('25','Sigtuna','191','351742698.12.00','852476.36.00',''),
 ('26','Nynäshamn','192','752874450.02.00','11364448.59.00',''),
 ('27','Håbo','305','186117057.32.00','78020.8368553977',''),
 ('28','Älvkarleby','319','273625472.21.00','3091849.07.00',''),
 ('29','Knivsta','330','296804347.52.00','10857036.15.00',''),
 ('30','Heby','331','1231764500.05664','6601453.26.00',''),
 ('31','Tierp','360','1802071599.05176','6626419.19.00',''),
 ('32','Uppsala','380','2246748821.10938','11349821.59.00',''),
 ('33','Enköping','381','1330553079.08252','6917346.08.00',''),
 ('34','Östhammar','382','1950644558.32617','4543939.28.00',''),
 ('35','Vingåker','428','441539756.26.00','979022.54.00',''),
 ('36','Gnesta','461','540793936.36.00','9580655.42.00',''),
 ('37','Nyköping','480','1826189230.31909','11754190.26.00',''),
 ('38','Oxelösund','481','76379994.15.00','41884.9589690719',''),
 ('39','Flen','482','830068458.07.00','1081876.33.00',''),
 ('40','Katrineholm','483','1195053343.73975','518037.41.00',''),
 ('41','Eskilstuna','484','1256752991.09351','16199381.24.00',''),
 ('42','Strängnäs','486','979638384.255127','5078544.36.00',''),
 ('43','Trosa','488','485518229.35.00','13608061.44.00',''),
 ('44','Ödeshög','509','536535862.08.00','15045951.29.00',''),
 ('45','Ydre','512','782024576.28.00','7832521.57.00',''),
 ('46','Kinda','513','1307735005.53809','1403257.31.00',''),
 ('47','Boxholm','560','606566104.15.00','4047552.31.00',''),
 ('48','Åtvidaberg','561','783800644.31.00','14080706.18.00',''),
 ('49','Finspång','562','1220798357.46948','2334161.36.00',''),
 ('50','Valdemarsvik','563','1123947812.50146','4314962.16.00',''),
 ('51','Linköping','580','1574910238.34717','15312090.55.00',''),
 ('52','Norrköping','581','1960205562.2959','522946.09.00',''),
 ('53','Söderköping','582','1008313985.57739','12882939.16.00',''),
 ('54','Motala','583','1183585173.42407','1102068.27.00',''),
 ('55','Vadstena','584','256442299.54.00','95755.6274638138',''),
 ('56','Mjölby','586','559694303.12.00','2508850.08.00',''),
 ('57','Aneby','604','556499339.21.00','6822501.31.00',''),
 ('58','Gnosjö','617','451878693.38.00','13918901.29.00',''),
 ('59','Mullsjö','642','212280324.58.00','11776318.24.00',''),
 ('60','Habo','643','385825694.49.00','8889083.23.00',''),
 ('61','Gislaved','662','1224547779.43335','6087529.02.00',''),
 ('62','Vaggeryd','665','863478073.296143','2588880.59.00',''),
 ('63','Jönköping','680','1560468472.08423','8253125.43.00',''),
 ('64','Nässjö','682','991747066.499512','4662572.55.00',''),
 ('65','Värnamo','683','1391576376.13232','8533609.47.00',''),
 ('66','Sävsjö','684','731855498.37.00','15522909.28.00',''),
 ('67','Vetlanda','685','1606651546.47632','15322926.06.00',''),
 ('68','Eksjö','686','877670756.669678','8598039.56.00',''),
 ('69','Tranås','687','439465400.36.00','14101788.56.00',''),
 ('70','Uppvidinge','760','1231800176.64209','11325520.47.00',''),
 ('71','Lessebo','761','458211785.49.00','9724357.51.00',''),
 ('72','Tingsryd','763','1212190834.21313','2500342.13.00',''),
 ('73','Alvesta','764','1078913627.75024','2219314.31.00',''),
 ('74','Älmhult','765','981621787.411865','8004450.04.00',''),
 ('75','Markaryd','767','535782449.43.00','13201193.16.00',''),
 ('76','Växjö','780','1922012449.94165','9051052.47.00',''),
 ('77','Ljungby','781','2001443580.61084','10949842.12.00',''),
 ('78','Högsby','821','802751104.54.00','4665787.23.00',''),
 ('79','Torsås','834','509726113.59.00','11324618.44.00',''),
 ('80','Mörbylånga','840','807567102.58.00','4461592.41.00',''),
 ('81','Hultsfred','860','1192061725.38257','15763180.24.00',''),
 ('82','Mönsterås','861','945169638.372803','7930907.46.00',''),
 ('83','Emmaboda','862','721837791.41.00','535350.54.00',''),
 ('84','Kalmar','880','1079714748.69214','442412.36.00',''),
 ('85','Nybro','881','1206524653.61353','6155659.12.00',''),
 ('86','Oskarshamn','882','1338485597.17505','1600937.19.00',''),
 ('87','Västervik','883','2499200894.0459','455646.02.00',''),
 ('88','Vimmerby','884','1225060536.4165','12362817.53.00',''),
 ('89','Borgholm','885','939539943.014648','16088947.54.00',''),
 ('90','Gotland','980','3704231091.81299','552302.19.00',''),
 ('91','Olofström','1060','414996282.27.00','5633646.04.00',''),
 ('92','Karlskrona','1080','1298687845.79248','1706600.27.00',''),
 ('93','Ronneby','1081','957502154.29834','10118618.35.00',''),
 ('94','Karlshamn','1082','568528929.08.00','7822036.08.00',''),
 ('95','Sölvesborg','1083','255692569.12.00','1783889.22.00',''),
 ('96','Svalöv','1214','390585453.55.00','6581190.26.00',''),
 ('97','Staffanstorp','1230','107752525.52.00','64805.2867541827',''),
 ('98','Burlöv','1231','19365643.35.00','771752.53.00',''),
 ('99','Vellinge','1233','199300883.27.00','5933046.03.00',''),
 ('100','Östra Göinge','1256','452909365.38.00','142676.07.00',''),
 ('101','Örkelljunga','1257','331039370.06.00','16397215.19.00',''),
 ('102','Bjuv','1260','116400349.18.00','10872258.13.00',''),
 ('103','Kävlinge','1261','173529820.05.00','80577.7684529106',''),
 ('104','Lomma','1262','67071675.57.00','46146.4908977367',''),
 ('105','Svedala','1263','227404500.19.00','11317913.19.00',''),
 ('106','Skurup','1264','201160480.27.00','93560.3834532207',''),
 ('107','Sjöbo','1265','508629849.47.00','4337413.33.00',''),
 ('108','Hörby','1266','434814577.46.00','2734045.34.00',''),
 ('109','Höör','1267','321944599.01.00','6445213.07.00',''),
 ('110','Tomelilla','1270','398971971.16.00','9606815.06.00',''),
 ('111','Bromölla','1272','196735869.21.00','82810.4469639592',''),
 ('112','Osby','1273','601419692.26.00','8314896.34.00',''),
 ('113','Perstorp','1275','162628243.56.00','61591.7267631613',''),
 ('114','Klippan','1276','381129738.46.00','13183112.43.00',''),
 ('115','Åstorp','1277','92628619.16.00','10949709.57.00',''),
 ('116','Båstad','1278','270958839.12.00','86767.9959453203',''),
 ('117','Malmö','1280','176501853.54.00','62721.9283169503',''),
 ('118','Lund','1281','442536508.46.00','3947549.46.00',''),
 ('119','Landskrona','1282','169605568.29.00','11170521.17.00',''),
 ('120','Helsingborg','1283','357805361.18.00','14084058.43.00',''),
 ('121','Höganäs','1284','187201239.42.00','72426.7817314539',''),
 ('122','Eslöv','1285','425411623.15.00','9686697.41.00',''),
 ('123','Ystad','1286','375619859.43.00','10978017.32.00',''),
 ('124','Trelleborg','1287','364992983.55.00','8516506.06.00',''),
 ('125','Kristianstad','1290','1387365955.10986','6801114.26.00',''),
 ('126','Simrishamn','1291','417281282.41.00','5633427.01.00',''),
 ('127','Ängelholm','1292','441752600.33.00','265189.19.00',''),
 ('128','Hässleholm','1293','1312754547.15527','8855930.45.00',''),
 ('129','Hylte','1315','1052081615.36255','13829343.11.00',''),
 ('130','Halmstad','1380','1105709426.59375','11106645.33.00',''),
 ('131','Laholm','1381','967856218.271729','12086144.32.00',''),
 ('132','Falkenberg','1382','1217132698.57556','1029989.17.00',''),
 ('133','Varberg','1383','1097204584.03003','7036233.56.00',''),
 ('134','Kungsbacka','1384','935138124.585693','9180526.16.00',''),
 ('135','Härryda','1401','292476296.48.00','96504.3373575634',''),
 ('136','Partille','1402','59291613.24.00','35302362.52.00',''),
 ('137','Öckerö','1407','123300292.51.00','49151.4102096374',''),
 ('138','Stenungsund','1415','302690211.27.00','85414.4333134547',''),
 ('139','Tjörn','1419','345278452.09.00','96636.3850256572',''),
 ('140','Orust','1421','579996142.04.00','11062351.33.00',''),
 ('141','Sotenäs','1427','240746505.54.00','31569651.52.00',''),
 ('142','Munkedal','1430','678683712.48.00','12710774.36.00',''),
 ('143','Tanum','1435','1206188869.04077','15240829.14.00',''),
 ('144','Dals-Ed','1438','829859626.17.00','12286761.25.00',''),
 ('145','Färgelanda','1439','622486294.05.00','5048357.17.00',''),
 ('146','Ale','1440','333551299.58.00','14643528.08.00',''),
 ('147','Lerum','1441','309614378.18.00','1066387.23.00',''),
 ('148','Vårgårda','1442','443365252.46.00','12231090.37.00',''),
 ('149','Bollebygd','1443','284003318.16.00','97551.8166949248',''),
 ('150','Grästorp','1444','282346601.09.00','1028636.22.00',''),
 ('151','Essunga','1445','236772542.39.00','10315778.45.00',''),
 ('152','Karlsborg','1446','574124677.55.00','7691045.35.00',''),
 ('153','Gullspång','1447','446477822.35.00','9441034.51.00',''),
 ('154','Tranemo','1452','781995014.08.00','9577044.48.00',''),
 ('155','Bengtsfors','1460','1063823329.60962','15771402.56.00',''),
 ('156','Mellerud','1461','658012398.32.00','9551260.48.00',''),
 ('157','Lilla Edet','1462','343632333.32.00','7441127.49.00',''),
 ('158','Mark','1463','1018162937.08398','12639929.14.00',''),
 ('159','Svenljunga','1465','991641073.059814','6835693.04.00',''),
 ('160','Herrljunga','1466','511786351.06.00','13307675.59.00',''),
 ('161','Vara','1470','704118488.15.00','3947938.35.00',''),
 ('162','Götene','1471','458439040.24.00','3080306.25.00',''),
 ('163','Tibro','1472','235162800.35.00','24797466.54.00',''),
 ('164','Töreboda','1473','594840363.12.00','7803504.27.00',''),
 ('165','Göteborg','1480','721909331.48.00','12293469.15.00',''),
 ('166','Mölndal','1481','153060809.18.00','67820.6238559946',''),
 ('167','Kungälv','1482','539298338.21.00','1553187.16.00',''),
 ('168','Lysekil','1484','356340579.46.00','13227181.42.00',''),
 ('169','Uddevalla','1485','736166676.38.00','14206356.11.00',''),
 ('170','Strömstad','1486','660192624.04.00','7886866.37.00',''),
 ('171','Vänersborg','1487','903054169.339355','9354614.44.00',''),
 ('172','Trollhättan','1488','429897596.54.00','389075.54.00',''),
 ('173','Alingsås','1489','554472097.58.00','161547.04.00',''),
 ('174','Borås','1490','972061128.218018','15974460.41.00',''),
 ('175','Ulricehamn','1491','1121539448.2356','16634103.31.00',''),
 ('176','Åmål','1492','621778675.42.00','1041958.35.00',''),
 ('177','Mariestad','1493','970681310.071777','7057637.11.00',''),
 ('178','Lidköping','1494','904735764.882324','9412677.17.00',''),
 ('179','Skara','1495','450457606.05.00','1506833.48.00',''),
 ('180','Skövde','1496','687539578.12.00','6612157.08.00',''),
 ('181','Hjo','1497','410172038.54.00','413511.42.00',''),
 ('182','Tidaholm','1498','525113221.17.00','16166879.48.00',''),
 ('183','Falköping','1499','1071633944.23608','3752762.49.00',''),
 ('184','Kil','1715','409869736.36.00','15964660.48.00',''),
 ('185','Eda','1730','899813807.37854','1732654.05.00',''),
 ('186','Torsby','1737','4380384812.80981','4583552.38.00',''),
 ('187','Storfors','1760','474801255.56.00','930569.32.00',''),
 ('188','Hammarö','1761','137578821.43.00','50356.9700374006',''),
 ('189','Munkfors','1762','148699618.21.00','65156.7696469349',''),
 ('190','Forshaga','1763','399233360.28.00','2232413.41.00',''),
 ('191','Grums','1764','481327164.18.00','9048033.39.00',''),
 ('192','Årjäng','1765','1661868016.9231','15435496.47.00',''),
 ('193','Sunne','1766','1455597339.82788','12600122.44.00',''),
 ('194','Karlstad','1780','1468719564.8584','2887638.33.00',''),
 ('195','Kristinehamn','1781','991588495.717041','6073788.39.00',''),
 ('196','Filipstad','1782','1720056001.13892','10594036.06.00',''),
 ('197','Hagfors','1783','2010144552.23242','228105.45.00',''),
 ('198','Arvika','1784','1966266619.24609','15806815.44.00',''),
 ('199','Säffle','1785','1601970140.32324','767407.05.00',''),
 ('200','Lekeberg','1814','484462252.44.00','3873766.07.00',''),
 ('201','Laxå','1860','740718668.03.00','5546503.13.00',''),
 ('202','Hallsberg','1861','673275020.43.00','10965093.08.00',''),
 ('203','Degerfors','1862','435759055.43.00','1504556.52.00',''),
 ('204','Hällefors','1863','1156216602.28345','9505229.48.00',''),
 ('205','Ljusnarsberg','1864','634382108.26.00','13318490.56.00',''),
 ('206','Örebro','1880','1627880461.70142','4378841.32.00',''),
 ('207','Kumla','1881','206277092.19.00','11168466.55.00',''),
 ('208','Askersund','1882','1024349949.77246','2805556.17.00',''),
 ('209','Karlskoga','1883','512763924.36.00','14197801.07.00',''),
 ('210','Nora','1884','694108301.01.00','1335574.59.00',''),
 ('211','Lindesberg','1885','1488014905.88721','14842595.45.00',''),
 ('212','Skinnskatteberg','1904','721351157.05.00','3628685.47.00',''),
 ('213','Surahammar','1907','371097837.52.00','30131896.07.00',''),
 ('214','Kungsör','1960','227670867.03.00','78786.3378285594',''),
 ('215','Hallstahammar','1961','181715741.06.00','83680.8778318224',''),
 ('216','Norberg','1962','451147179.52.00','12554336.47.00',''),
 ('217','Västerås','1980','1141853379.73828','12259631.48.00',''),
 ('218','Sala','1981','1210796457.94287','267290.44.00',''),
 ('219','Fagersta','1982','311906104.13.00','2221608.46.00',''),
 ('220','Köping','1983','648428931.42.00','3477258.24.00',''),
 ('221','Arboga','1984','421363139.11.00','970477.33.00',''),
 ('222','Vansbro','2021','1665607163.43433','2218100.27.00',''),
 ('223','Malung-Sälen','2023','4334800351.12036','4082243.54.00',''),
 ('224','Gagnef','2026','813835588.09.00','11381288.01.00',''),
 ('225','Leksand','2029','1422736668.93579','12331869.01.00',''),
 ('226','Rättvik','2031','2147645359.77271','4212485.36.00',''),
 ('227','Orsa','2034','1806522833.10303','2254420.18.00',''),
 ('228','Älvdalen','2039','7181825812.63452','16335375.17.00',''),
 ('229','Smedjebacken','2061','1061635437.27783','5658352.37.00',''),
 ('230','Mora','2062','3126902023.40576','4878485.29.00',''),
 ('231','Falun','2080','2286147223.27271','6778976.16.00',''),
 ('232','Borlänge','2081','638830428.08.00','12008320.32.00',''),
 ('233','Säter','2082','627482244.03.00','10919931.31.00',''),
 ('234','Hedemora','2083','933380369.933594','12263538.26.00',''),
 ('235','Avesta','2084','672374986.11.00','7139431.34.00',''),
 ('236','Ludvika','2085','1656379207.40771','6810339.24.00',''),
 ('237','Ockelbo','2101','1134770243.23657','8572168.11.00',''),
 ('238','Hofors','2104','447963404.54.00','95913.5156427996',''),
 ('239','Ovanåker','2121','2027303455.62573','1401389.55.00',''),
 ('240','Nordanstig','2132','1777720471.40063','13761640.52.00',''),
 ('241','Ljusdal','2161','5638797928.97339','10994051.53.00',''),
 ('242','Gävle','2180','2097478242.84473','911431.58.00',''),
 ('243','Sandviken','2181','1303784084.11938','4820254.39.00',''),
 ('244','Söderhamn','2182','1354481307.08838','14576144.39.00',''),
 ('245','Bollnäs','2183','1985685723.3418','2616967.06.00',''),
 ('246','Hudiksvall','2184','3133266285.5127','5668132.08.00',''),
 ('247','Ånge','2260','3313220432.20435','3637441.24.00',''),
 ('248','Timrå','2262','901501054.549072','1470228.33.00',''),
 ('249','Härnösand','2280','1275036895.75513','7123614.09.00',''),
 ('250','Sundsvall','2281','3751645567.79492','4076965.28.00',''),
 ('251','Kramfors','2282','2141004361.71289','9578374.01.00',''),
 ('252','Sollefteå','2283','5793682085.3457','568565.23.00',''),
 ('253','Örnsköldsvik','2284','7146278623.97803','741486.41.00',''),
 ('254','Ragunda','2303','2647581218.11865','1488785.53.00',''),
 ('255','Bräcke','2305','3804131268.32178','14372436.07.00',''),
 ('256','Krokom','2309','6850268582.51978','7259394.17.00',''),
 ('257','Strömsund','2313','11847563626.0352','3019336.18.00',''),
 ('258','Åre','2321','8284025170.1333','1212595.36.00',''),
 ('259','Berg','2326','6180955500.08154','12136872.42.00',''),
 ('260','Härjedalen','2361','11922084961.5667','7081030.44.00',''),
 ('261','Östersund','2380','2514645331.41089','13646946.42.00',''),
 ('262','Nordmaling','2401','1467039777.70068','7694705.54.00',''),
 ('263','Bjurholm','2403','1372752062.57715','13565494.47.00',''),
 ('264','Vindeln','2404','2871649334.45313','6646911.33.00',''),
 ('265','Robertsfors','2409','1454234452.05322','1863387.56.00',''),
 ('266','Norsjö','2417','1936863203.4043','10916025.03.00',''),
 ('267','Malå','2418','1738806069.35205','13608967.18.00',''),
 ('268','Storuman','2421','8282549105.48682','14775349.02.00',''),
 ('269','Sorsele','2422','8006696195.22412','10760592.08.00',''),
 ('270','Dorotea','2425','2959611957.44897','1078834.38.00',''),
 ('271','Vännäs','2460','557538178.35.00','3587298.07.00',''),
 ('272','Vilhelmina','2462','8788295479.27759','9727964.13.00',''),
 ('273','Åsele','2463','4571351217.84497','11939118.25.00',''),
 ('274','Umeå','2480','3050522877.72852','9247875.13.00',''),
 ('275','Lycksele','2481','5926826346.59033','9512417.32.00',''),
 ('276','Skellefteå','2482','7640043284.125','13336200.03.00',''),
 ('277','Arvidsjaur','2505','6167518552.75732','1893216.12.00',''),
 ('278','Arjeplog','2506','14585401660.8162','17091225.42.00',''),
 ('279','Jokkmokk','2510','19466420026.9563','16669968.19.00',''),
 ('280','Överkalix','2513','2943803184.19336','15480464.18.00',''),
 ('281','Kalix','2514','2503831355.05713','2581772.01.00',''),
 ('282','Övertorneå','2518','2509962660.30713','1669170.42.00',''),
 ('283','Pajala','2521','8124094161.73535','10164760.18.00',''),
 ('284','Gällivare','2523','16946118322.5925','8911228.15.00',''),
 ('285','Älvsbyn','2560','1809365661.84961','8609541.55.00',''),
 ('286','Luleå','2580','3478916647.61768','12247532.38.00',''),
 ('287','Piteå','2581','3850392654.67041','6584523.51.00',''),
 ('288','Boden','2582','4320826755.18457','6014282.43.00',''),
 ('289','Haparanda','2583','1576171324.56934','273428.19.00',''),
 ('290','Kiruna','2584','20703223743.8926','8210275.18.00','');
    `;

    let res = await db.query(string);
}

/**
 * Exports the JSON object into the database.
 *
 * @async
 * @returns {RowDataPacket} Resultset from the query.
 */
async function addToDatabase(items, id) {
    let res;
    let sql;

    for (var i = 0; i < items.tables.length; i++) {
        items.headers[i].tableName = items.headers[i].tableName.replace(/[{(,:)}]/g, '').trim();
        items.headers[i].tableName = items.headers[i].tableName.replace(/\s/g,"_");
        var tablerowHeaders = [];
        var tablerowContent = [];
        var count = 0
        for (var j = 0; j < (items.tables[i].table.length); j++) {

            var header = String(items.tables[i].table[j][0]).replace(/undefined/g, "").trim();
            header = header.replace(/[{(,)}]/g, '').trim();
            header = header.replace(/\s/g,"_");
            header = header.replace(/[-]/g,"");

            if (items.tables[i].table[j][0] == "Databaser") { //If we find Databaser as header
                res = await db.query('CREATE TABLE IF NOT EXISTS databaser (ID TEXT NOT NULL, Databas TEXT DEFAULT NULL, Beskrivning TEXT DEFAULT NULL)');

                for (var k = 0; k < items.tables[i].table[j+1][0].length; k++) {
                    sql = 'INSERT INTO databaser VALUES ("' + id + '", "' + items.tables[i].table[j+1][0][k] + '", "' + items.tables[i].table[j+1][1][k] + '")';
                    //console.log(sql);
                    res = await db.query(sql);
                }

                j += 1; //Skip one row
            }

            else {
                if (tablerowHeaders.includes(header)) { //If duplicate header in table
                    //TODO Just add to existing table
                    var next = 1;
                    for (var n = 0; n < tablerowHeaders.length; n++) {
                        if (tablerowHeaders[n] == header) {
                            next++;
                        }
                    }
                    header += "_" + next;
                }
                tablerowHeaders[count] = header;
                if (items.tables[i].table[j][1] == null) {
                    tablerowContent[count] = tablerowHeaders[count];
                    tablerowHeaders[count] = String("Path_" + j);
                }
                else {
                    tablerowContent[count] = String(items.tables[i].table[j][1]).replace(/undefined/g, "").trim();
                }
                count++;
            }


        }

        sql = getUpdateDBTableString(items.headers[i].tableName, tablerowHeaders);
        //console.log(sql);
        res = await db.query(sql);


        sql = 'INSERT INTO ' + items.headers[i].tableName + ' (';

        for (var j = 0; j < tablerowHeaders.length; j++) {
            if (j == 0) {
                sql += "ID";
            }
            sql += (', ' + tablerowHeaders[j]);
        }

        sql += ') VALUES (';

        var onDuplicateString = "ON DUPLICATE KEY UPDATE";
        for (var j = 0; j < tablerowContent.length; j++) {
            if (j == 0) {
                sql += ('"' + id + '"');
            }
            if (tablerowContent[j] == "") {
                sql += (', ' + "null");
                onDuplicateString += (', ' + tablerowHeaders[j] + " = null");
            }
            else {
                sql += (", '" + tablerowContent[j] + "'");
                onDuplicateString += (', ' + tablerowHeaders[j]  + " = '" + tablerowContent[j] + "'");
            }
        }
        onDuplicateString = onDuplicateString.replace(",", "");
        sql += ') ' + onDuplicateString + ';';


        res = await db.query(sql);
    }

    var styleish = id.padStart(12 + (id.length /2), " ");
    styleish = styleish.padEnd(23, " ")
    console.log("_____________________________\n" +
                "|¤|" + styleish + "|¤|\n" +
                "|¤|=======================|¤|\n" +
                "|¤| DOCX SENT TO DATABASE |¤|\n" +
                "|¤|_______________________|¤|");
    return res;
}
